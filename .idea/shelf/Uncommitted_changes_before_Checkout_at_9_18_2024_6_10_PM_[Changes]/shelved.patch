Index: app/src/main/java/com/example/carmaintenancetracker/FirstFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.carmaintenancetracker;\r\n\r\nimport android.annotation.SuppressLint;\r\nimport android.app.AlertDialog;\r\nimport android.content.Intent;\r\nimport android.database.Cursor;\r\nimport android.graphics.drawable.Drawable;\r\nimport android.os.Bundle;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.TextView;\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.core.content.ContextCompat;\r\nimport androidx.fragment.app.Fragment;\r\nimport com.example.carmaintenancetracker.databinding.FragmentFirstBinding;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport java.util.Objects;\r\n\r\nimport static android.app.Activity.RESULT_OK;\r\n\r\npublic class FirstFragment extends Fragment {\r\n\r\n    private static final int ADD_VEHICLE_REQUEST_CODE = 1;\r\n    //View binding for the fragment's layout\r\n    private FragmentFirstBinding binding;\r\n    //Views to handle mileage, notifications, and buttons\r\n    private TextView mileageText;\r\n    private Button notificationToggleButton;\r\n    private View notificationBar;\r\n    private TextView notificationText;\r\n    private boolean notificationsOn = false; //Default state for notifications\r\n    private TextView titleText;\r\n\r\n    //List to store chicle mileage and names (IDs or names)\r\n    private final List<Integer> vehicleMileage = new ArrayList<>();\r\n    private final List<String> vehicleList = new ArrayList<>();\r\n    private int currentVehicleIndex = 0;\r\n\r\n    @Nullable\r\n    @Override\r\n    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\r\n        // Inflate the fragment layout using binding\r\n        binding = FragmentFirstBinding.inflate(inflater, container, false);\r\n        return binding.getRoot();\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onSaveInstanceState(@NonNull Bundle outState) {\r\n        super.onSaveInstanceState(outState);\r\n\r\n        // Save the current vehicle data\r\n        outState.putStringArrayList(\"vehicleList\", new ArrayList<>(vehicleList));\r\n        outState.putIntegerArrayList(\"vehicleMileage\", new ArrayList<>(vehicleMileage));\r\n        outState.putInt(\"currentVehicleIndex\", currentVehicleIndex);\r\n    }\r\n\r\n    //AddVehicleActivity save button storage\r\n    @Override\r\n    public void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n\r\n        if (requestCode == ADD_VEHICLE_REQUEST_CODE && resultCode == RESULT_OK && data != null) {\r\n            String make = data.getStringExtra(\"vehicleMake\");\r\n            String model = data.getStringExtra(\"vehicleModel\");\r\n            String year = data.getStringExtra(\"vehicleYear\");\r\n            String licensePlate = data.getStringExtra(\"vehicleLicensePlate\");\r\n            String milesStr = data.getStringExtra(\"vehicleMiles\");\r\n\r\n            int miles = milesStr != null && !milesStr.isEmpty() ? Integer.parseInt(milesStr) : 0;\r\n            vehicleList.add(make + \" \" + model + \" \" + year + \" \" + licensePlate);\r\n            vehicleMileage.add(miles);\r\n\r\n            // If this is the first vehicle, display it as default\r\n            if (vehicleList.size() == 1) {\r\n                showVehicle(0); // Show the first vehicle\r\n            }\r\n\r\n            updateVehicleButtons();\r\n        }\r\n    }\r\n\r\n    @SuppressLint(\"SetTextI18n\")\r\n    @Override\r\n    public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {\r\n        super.onViewCreated(view, savedInstanceState);\r\n\r\n        //Initialize the UI components with the fragment\r\n        mileageText = view.findViewById(R.id.textView_selected_car_mileage);\r\n        notificationToggleButton = view.findViewById(R.id.btn_selected_car_notifications_setting);\r\n        notificationBar = view.findViewById(R.id.textView_selected_car_notifications_setting);\r\n        notificationText = notificationBar.findViewById(R.id.textView_selected_car_notifications_setting);\r\n        titleText = view.findViewById(R.id.selected_car_title);\r\n\r\n        VehicleDatabaseHelper dbHelper = new VehicleDatabaseHelper(getContext());\r\n\r\n        //Load the default (first vehicle from the database if available\r\n        Cursor cursor = dbHelper.getFirstVehicle();\r\n        if (cursor != null && cursor.moveToFirst()) {\r\n            @SuppressLint(\"Range\") String make = cursor.getString(cursor.getColumnIndex(\"make\"));\r\n            @SuppressLint(\"Range\") String model = cursor.getString(cursor.getColumnIndex(\"model\"));\r\n            @SuppressLint(\"Range\") String year = cursor.getString(cursor.getColumnIndex(\"year\"));\r\n            @SuppressLint(\"Range\") String licensePlate = cursor.getString(cursor.getColumnIndex(\"license\"));\r\n            @SuppressLint(\"Range\") String miles = cursor.getString(cursor.getColumnIndex(\"miles\"));\r\n\r\n            // Set the title to the license plate if available, otherwise use make, model, year\r\n            if (licensePlate != null && !licensePlate.isEmpty()) {\r\n                titleText.setText(licensePlate);\r\n            } else {\r\n                titleText.setText(year + \" \" + make + \" \" + model);\r\n            }\r\n            mileageText.setText(miles + \" miles\");\r\n\r\n            vehicleList.add(make + \" \" + model + \" \" + year + \" \" + licensePlate);\r\n            vehicleMileage.add(Integer.parseInt(miles));\r\n\r\n            updateVehicleButtons();\r\n        } else {\r\n            promptAddVehicle(); // No vehicles found, prompt the user to add one\r\n        }\r\n\r\n        Objects.requireNonNull(cursor).close();\r\n\r\n        //Restore state of application\r\n        if (savedInstanceState != null) {\r\n            // Restore the saved state\r\n            vehicleList.addAll(savedInstanceState.getStringArrayList(\"vehicleList\"));\r\n            vehicleMileage.addAll(savedInstanceState.getIntegerArrayList(\"vehicleMileage\"));\r\n            currentVehicleIndex = savedInstanceState.getInt(\"currentVehicleIndex\");\r\n\r\n            // Update the UI\r\n            updateVehicleButtons();\r\n            showVehicle(currentVehicleIndex);\r\n        } else {\r\n            //Initialize the vehicle list if empty\r\n            if (vehicleList.isEmpty()) {\r\n                promptAddVehicle();\r\n            } else {\r\n                updateVehicleButtons();\r\n                showVehicle(currentVehicleIndex);\r\n            }\r\n        }\r\n        setupVehicleButtons(view);\r\n\r\n        //Set up listeners for buttons in this fragment\r\n\r\n        //Update Mileage Button: Triggers the mileage update dialog\r\n        Button updateButton = view.findViewById(R.id.btn_selected_car_mileage_update);\r\n        updateButton.setOnClickListener(v -> showUpdateMileageDialog());\r\n\r\n        //Notification Toggle Button: Toggles notification on or off\r\n        notificationToggleButton.setOnClickListener(v -> toggleNotifications());\r\n\r\n        //Add New Maintenance Button: Opens the add maintenance screen\r\n        Button addMaintenanceButton = view.findViewById(R.id.btn_add_new_maintenance);\r\n        addMaintenanceButton.setOnClickListener(v -> addNewMaintenance());\r\n\r\n        //View Upcoming Maintenance Button: Opens the screen showing upcoming maintenance\r\n        Button viewMaintenanceButton = view.findViewById(R.id.btn_view_upcoming_maintenance);\r\n        viewMaintenanceButton.setOnClickListener(v -> viewUpcomingMaintenance());\r\n    }\r\n\r\n    //Method to set up vehicle buttons\r\n    private void setupVehicleButtons(View view){\r\n\r\n        //Vehicle 1 Button: Switches to Vehicle 1\r\n        Button vehicle1Button = view.findViewById(R.id.btn_vehicle_1);\r\n        vehicle1Button.setOnClickListener(v -> switchOrAddVehicle(0));\r\n\r\n        //Vehicle 2 Button: Switches to Vehicle 2\r\n        Button vehicle2Button = view.findViewById(R.id.btn_vehicle_2);\r\n        vehicle2Button.setOnClickListener(v -> switchOrAddVehicle(1));\r\n\r\n        //Vehicle 3 Button: Switches to Vehicle 3\r\n        Button vehicle3Button = view.findViewById(R.id.btn_vehicle_3);\r\n        vehicle3Button.setOnClickListener(v -> switchOrAddVehicle(2));\r\n    }\r\n\r\n    //Method to show a dialog for updating the mileage\r\n    @SuppressLint(\"SetTextI18n\")\r\n    private void showUpdateMileageDialog(){\r\n        //Check if there is an active vehicle selected\r\n        AlertDialog.Builder builder = new AlertDialog.Builder(getContext());\r\n        if (vehicleList.isEmpty()) {\r\n            builder.setTitle(\"No Vehicle Selected\");\r\n            builder.setMessage(\"You need to add a vehicle first before updating mileage.\");\r\n            builder.setPositiveButton(\"OK\", (dialog, which) -> dialog.dismiss());\r\n        } else {\r\n            //If a vehicle is selected, show the mileage update dialog\r\n            builder.setTitle(\"Update Mileage\");\r\n\r\n            //Add input field to dialog\r\n            final EditText input = new EditText(getContext());\r\n            input.setHint(\"Enter new mileage\");\r\n            builder.setView(input);\r\n\r\n            //Set up the buttons for the dialog\r\n            builder.setPositiveButton(\"Update\", (dialog, which) -> {\r\n                //Get the new mileage from the input field\r\n                String newMileageStr = input.getText().toString();\r\n                if (!newMileageStr.isEmpty()) {\r\n                    int newMileage = Integer.parseInt(newMileageStr);\r\n                    vehicleMileage.set(currentVehicleIndex, newMileage); // Update the mileage for the current vehicle\r\n                    mileageText.setText(newMileage + \" miles\"); // Update the displayed mileage\r\n                }\r\n            });\r\n\r\n            builder.setNegativeButton(\"Cancel\", (dialog, which) -> dialog.cancel());\r\n\r\n            //Show the mileage update dialog\r\n        }\r\n        builder.show();\r\n    }\r\n\r\n    //Method to toggle notifications on/off\r\n    @SuppressLint(\"SetTextI18n\")\r\n    private void toggleNotifications() {\r\n        notificationsOn = !notificationsOn;// Toggle the boolean value\r\n        if (notificationsOn) {\r\n            // Set the button text and bar color when notifications are ON\r\n            notificationToggleButton.setText(\"Turn Off\");\r\n            Drawable greenGradient = ContextCompat.getDrawable(Objects.requireNonNull(getContext()), R.drawable.green_border_gradient);\r\n            notificationBar.setBackground(greenGradient);\r\n            notificationText.setText(\"Notifications for this vehicle are ON\");\r\n        } else {\r\n            // Set the button text and bar color when notifications are OFF\r\n            notificationToggleButton.setText(\"Turn On\");\r\n            Drawable redGradient = ContextCompat.getDrawable(Objects.requireNonNull(getContext()), R.drawable.red_border_gradient);\r\n            notificationBar.setBackground(redGradient);\r\n            notificationText.setText(\"Notifications for this vehicle are OFF\");\r\n        }\r\n    }\r\n\r\n    //Method to handle adding new maintenance\r\n    private void addNewMaintenance() {\r\n        // Logic to open the \"Add New Maintenance\" screen or fragment\r\n    }\r\n\r\n    //Method to handle viewing upcoming maintenance\r\n    private void viewUpcomingMaintenance() {\r\n        //Logic to navigate to the \"Upcoming Maintenance\" screen or fragment\r\n    }\r\n\r\n    //Method to display mileage for the selected vehicle\r\n    @SuppressLint(\"SetTextI18n\")\r\n    private void showVehicle(int vehicleIndex) {\r\n        if (vehicleIndex >= 0 && vehicleIndex < vehicleList.size()) {\r\n            currentVehicleIndex = vehicleIndex;\r\n\r\n            //Place the make, model, year of vehicle in blue gradient\r\n            String makeModelYear = vehicleList.get(vehicleIndex);\r\n            String[] vehicleDetails = makeModelYear.split(\" \");\r\n            String licensePlate = vehicleDetails.length > 3 ? vehicleDetails[3] : \"\";\r\n\r\n            //If there is a license plate entered or not\r\n            Drawable blueGradient = ContextCompat.getDrawable(Objects.requireNonNull(getContext()), R.drawable.title_border_gradient);\r\n            if (!licensePlate.isEmpty()) {\r\n                //Set license plate in the blue gradient if it's filled\r\n                binding.selectedCarTitle.setText(licensePlate);\r\n            } else{\r\n                //Otherwise, set year, make, model in the blue gradient\r\n                binding.selectedCarTitle.setText(vehicleDetails[2] + \" \" + vehicleDetails[0] + \" \" + vehicleDetails[1]);\r\n            }\r\n            titleText.setBackground(blueGradient);\r\n\r\n            mileageText.setText(vehicleMileage.get(vehicleIndex) + \" miles\");\r\n        }\r\n    }\r\n\r\n    //Method to switch between existing vehicles or add a new one\r\n    private void switchOrAddVehicle(int index) {\r\n        if (index < vehicleList.size()) {\r\n            switchVehicle(index);\r\n        }else {\r\n            promptAddVehicle();\r\n        }\r\n    }\r\n\r\n    //Switch between vehicles based on index\r\n    private void switchVehicle(int vehicleIndex) {\r\n        if (vehicleIndex >= 0 && vehicleIndex < vehicleList.size()) {\r\n            currentVehicleIndex = vehicleIndex;\r\n            showVehicle(vehicleIndex);\r\n        }\r\n    }\r\n\r\n    //Prompt user to add new vehicle\r\n    private void promptAddVehicle() {\r\n        Intent intent = new Intent(getContext(), AddVehicleActivity.class);\r\n        startActivityForResult(intent, 1);\r\n    }\r\n\r\n    //Update the button text dynamically based on the number of vehicles\r\n    @SuppressLint(\"SetTextI18n\")\r\n    private void updateVehicleButtons() {\r\n        Button vehicle1Button = Objects.requireNonNull(getView()).findViewById(R.id.btn_vehicle_1);\r\n        Button vehicle2Button = Objects.requireNonNull(getView()).findViewById(R.id.btn_vehicle_2);\r\n        Button vehicle3Button = Objects.requireNonNull(getView()).findViewById(R.id.btn_vehicle_3);\r\n\r\n        if (!vehicleList.isEmpty()) {\r\n            vehicle1Button.setText(vehicleList.get(0)); // Default vehicle is Vehicle 1\r\n        }\r\n\r\n        if (vehicleList.size() > 1) {\r\n            vehicle2Button.setText(vehicleList.get(1));\r\n        } else {\r\n            vehicle2Button.setText(\"Add New Vehicle\");\r\n        }\r\n\r\n        if (vehicleList.size() > 2) {\r\n            vehicle3Button.setText(vehicleList.get(2));\r\n        } else {\r\n            vehicle3Button.setText(\"Add New Vehicle\");\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onDestroyView() {\r\n        super.onDestroyView();\r\n        // Nullify the binding to avoid memory leaks\r\n        binding = null;\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/carmaintenancetracker/FirstFragment.java b/app/src/main/java/com/example/carmaintenancetracker/FirstFragment.java
--- a/app/src/main/java/com/example/carmaintenancetracker/FirstFragment.java	(revision 80e1ca1b9a15ae9feb9032012658bc41f85c42b9)
+++ b/app/src/main/java/com/example/carmaintenancetracker/FirstFragment.java	(date 1726526336181)
@@ -12,6 +12,7 @@
 import android.widget.Button;
 import android.widget.EditText;
 import android.widget.TextView;
+import android.widget.Toast;
 import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
 import androidx.core.content.ContextCompat;
@@ -138,13 +139,8 @@
             updateVehicleButtons();
             showVehicle(currentVehicleIndex);
         } else {
-            //Initialize the vehicle list if empty
-            if (vehicleList.isEmpty()) {
-                promptAddVehicle();
-            } else {
                 updateVehicleButtons();
                 showVehicle(currentVehicleIndex);
-            }
         }
         setupVehicleButtons(view);
 
@@ -171,15 +167,15 @@
 
         //Vehicle 1 Button: Switches to Vehicle 1
         Button vehicle1Button = view.findViewById(R.id.btn_vehicle_1);
-        vehicle1Button.setOnClickListener(v -> switchOrAddVehicle(0));
+        vehicle1Button.setOnClickListener(v -> switchOrAddVehicle(1));
 
         //Vehicle 2 Button: Switches to Vehicle 2
         Button vehicle2Button = view.findViewById(R.id.btn_vehicle_2);
-        vehicle2Button.setOnClickListener(v -> switchOrAddVehicle(1));
+        vehicle2Button.setOnClickListener(v -> switchOrAddVehicle(2));
 
         //Vehicle 3 Button: Switches to Vehicle 3
         Button vehicle3Button = view.findViewById(R.id.btn_vehicle_3);
-        vehicle3Button.setOnClickListener(v -> switchOrAddVehicle(2));
+        vehicle3Button.setOnClickListener(v -> switchOrAddVehicle(3));
     }
 
     //Method to show a dialog for updating the mileage
@@ -285,8 +281,12 @@
     //Switch between vehicles based on index
     private void switchVehicle(int vehicleIndex) {
         if (vehicleIndex >= 0 && vehicleIndex < vehicleList.size()) {
+            // Save current vehicle's data (if necessary)
             currentVehicleIndex = vehicleIndex;
-            showVehicle(vehicleIndex);
+            showVehicle(vehicleIndex); // Display the selected vehicle's details
+        } else {
+            // Log the error or handle invalid vehicle index
+            Toast.makeText(getContext(), "Error: Invalid vehicle index", Toast.LENGTH_SHORT).show();
         }
     }
 
@@ -303,21 +303,43 @@
         Button vehicle2Button = Objects.requireNonNull(getView()).findViewById(R.id.btn_vehicle_2);
         Button vehicle3Button = Objects.requireNonNull(getView()).findViewById(R.id.btn_vehicle_3);
 
-        if (!vehicleList.isEmpty()) {
-            vehicle1Button.setText(vehicleList.get(0)); // Default vehicle is Vehicle 1
-        }
+        // Reset visibility of buttons
+        vehicle1Button.setVisibility(View.VISIBLE);
+        vehicle2Button.setVisibility(View.VISIBLE);
+        vehicle3Button.setVisibility(View.VISIBLE);
 
         if (vehicleList.size() > 1) {
-            vehicle2Button.setText(vehicleList.get(1));
+            vehicle1Button.setText(vehicleList.get(1)); // Second vehicle in the list
+            vehicle1Button.setVisibility(View.VISIBLE);
+        } else {
+            vehicle1Button.setText("Add New Vehicle");
+        }
+
+        if (vehicleList.size() > 2) {
+            vehicle2Button.setText(vehicleList.get(2)); // Third vehicle in the list
+            vehicle2Button.setVisibility(View.VISIBLE);
         } else {
             vehicle2Button.setText("Add New Vehicle");
         }
 
-        if (vehicleList.size() > 2) {
-            vehicle3Button.setText(vehicleList.get(2));
+        if (vehicleList.size() > 3) {
+            vehicle3Button.setText(vehicleList.get(3)); // Fourth vehicle in the list
+            vehicle3Button.setVisibility(View.VISIBLE);
         } else {
             vehicle3Button.setText("Add New Vehicle");
         }
+
+        switch (currentVehicleIndex) {
+            case 1:
+                vehicle1Button.setVisibility(View.INVISIBLE);
+                break;
+            case 2:
+                vehicle2Button.setVisibility(View.INVISIBLE);
+                break;
+            case 3:
+                vehicle3Button.setVisibility(View.INVISIBLE);
+                break;
+        }
     }
 
     @Override
Index: .idea/deploymentTargetSelector.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"deploymentTargetSelector\">\r\n    <selectionStates>\r\n      <SelectionState runConfigName=\"app\">\r\n        <option name=\"selectionMode\" value=\"DROPDOWN\" />\r\n      </SelectionState>\r\n    </selectionStates>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/deploymentTargetSelector.xml b/.idea/deploymentTargetSelector.xml
--- a/.idea/deploymentTargetSelector.xml	(revision 80e1ca1b9a15ae9feb9032012658bc41f85c42b9)
+++ b/.idea/deploymentTargetSelector.xml	(date 1726528696520)
@@ -4,6 +4,14 @@
     <selectionStates>
       <SelectionState runConfigName="app">
         <option name="selectionMode" value="DROPDOWN" />
+        <DropdownSelection timestamp="2024-09-16T23:12:32.577034600Z">
+          <Target type="DEFAULT_BOOT">
+            <handle>
+              <DeviceId pluginId="LocalEmulator" identifier="path=C:\Users\Thomas Andes\.android\avd\Medium_Phone_API_34.avd" />
+            </handle>
+          </Target>
+        </DropdownSelection>
+        <DialogSelection />
       </SelectionState>
     </selectionStates>
   </component>
Index: app/src/main/res/layout/activity_add_vehicle.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n                                                   xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n                                                   android:layout_width=\"match_parent\"\r\n                                                   android:layout_height=\"match_parent\"\r\n                                                   android:background=\"#F8F8F8\">\r\n\r\n    <!-- Car Animation at the Top -->\r\n    <com.airbnb.lottie.LottieAnimationView\r\n            android:id=\"@+id/carAnimation\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"200dp\"\r\n            android:layout_marginTop=\"32dp\"\r\n            app:lottie_rawRes=\"@raw/car_animation\"\r\n            app:lottie_autoPlay=\"true\"\r\n            app:lottie_loop=\"true\"\r\n            app:layout_constraintTop_toTopOf=\"parent\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\" />\r\n\r\n    <!-- Car Make Dropdown Menu -->\r\n    <Spinner\r\n            android:id=\"@+id/spinnerCarMake\"\r\n            android:layout_width=\"349dp\"\r\n            android:layout_height=\"58dp\"\r\n            android:background=\"@drawable/spinner_background\"\r\n            app:layout_constraintTop_toBottomOf=\"@id/carAnimation\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            android:layout_marginTop=\"16dp\"\r\n            android:layout_marginStart=\"32dp\"\r\n            android:layout_marginEnd=\"32dp\"/>\r\n\r\n    <!-- Car Model Dropdown Menu -->\r\n    <Spinner\r\n            android:id=\"@+id/spinnerCarModel\"\r\n            android:layout_width=\"346dp\"\r\n            android:layout_height=\"55dp\"\r\n            android:background=\"@drawable/spinner_background\"\r\n            app:layout_constraintTop_toBottomOf=\"@id/spinnerCarMake\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            android:layout_marginTop=\"16dp\"\r\n            android:layout_marginStart=\"32dp\"\r\n            android:layout_marginEnd=\"32dp\"/>\r\n\r\n    <!-- Year Dropdown Menu -->\r\n    <Spinner\r\n            android:id=\"@+id/spinnerCarYear\"\r\n            android:layout_width=\"345dp\"\r\n            android:layout_height=\"55dp\"\r\n            android:background=\"@drawable/spinner_background\"\r\n            app:layout_constraintTop_toBottomOf=\"@id/spinnerCarModel\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            android:layout_marginTop=\"16dp\"\r\n            android:layout_marginStart=\"32dp\"\r\n            android:layout_marginEnd=\"32dp\"/>\r\n\r\n    <!-- Licence Input Field -->\r\n    <EditText\r\n            android:id=\"@+id/inputCarLicence\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:hint=\"Licence Plate\"\r\n            android:background=\"@drawable/rounded_edittext_background\"\r\n            android:padding=\"16dp\"\r\n            android:textSize=\"16sp\"\r\n            android:inputType=\"text\"\r\n            app:layout_constraintTop_toBottomOf=\"@id/spinnerCarYear\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            android:layout_marginTop=\"16dp\"\r\n            android:layout_marginStart=\"32dp\"\r\n            android:layout_marginEnd=\"32dp\" />\r\n\r\n    <!-- Licence Input Field -->\r\n    <EditText\r\n            android:id=\"@+id/inputCarMiles\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:hint=\"Miles\"\r\n            android:background=\"@drawable/rounded_edittext_background\"\r\n            android:padding=\"16dp\"\r\n            android:textSize=\"16sp\"\r\n            android:inputType=\"text\"\r\n            app:layout_constraintTop_toBottomOf=\"@id/inputCarLicence\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            android:layout_marginTop=\"16dp\"\r\n            android:layout_marginStart=\"32dp\"\r\n            android:layout_marginEnd=\"32dp\" />\r\n\r\n    <!-- Licence Input Field -->\r\n    <EditText\r\n            android:id=\"@+id/inputCarMaintenance\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:hint=\"Last Maintenance\"\r\n            android:background=\"@drawable/rounded_edittext_background\"\r\n            android:padding=\"16dp\"\r\n            android:textSize=\"16sp\"\r\n            android:inputType=\"text\"\r\n            app:layout_constraintTop_toBottomOf=\"@id/inputCarMiles\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            android:layout_marginTop=\"16dp\"\r\n            android:layout_marginStart=\"32dp\"\r\n            android:layout_marginEnd=\"32dp\" />\r\n\r\n    <!-- Save Button -->\r\n    <Button\r\n            android:id=\"@+id/btnSave\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:text=\"Save\"\r\n            android:textColor=\"#FFFFFF\"\r\n            android:background=\"@drawable/rounded_button_background\"\r\n            android:textSize=\"18sp\"\r\n            android:layout_marginTop=\"24dp\"\r\n            app:layout_constraintTop_toBottomOf=\"@id/inputCarMaintenance\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            android:layout_marginStart=\"32dp\"\r\n            android:layout_marginEnd=\"32dp\" />\r\n\r\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_add_vehicle.xml b/app/src/main/res/layout/activity_add_vehicle.xml
--- a/app/src/main/res/layout/activity_add_vehicle.xml	(revision 80e1ca1b9a15ae9feb9032012658bc41f85c42b9)
+++ b/app/src/main/res/layout/activity_add_vehicle.xml	(date 1726528428322)
@@ -123,5 +123,6 @@
             app:layout_constraintEnd_toEndOf="parent"
             android:layout_marginStart="32dp"
             android:layout_marginEnd="32dp" />
+    <include android:layout_width="wrap_content" android:layout_height="wrap_content" layout="@layout/activity_main"/>
 
 </androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
